<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ailu.firmoffer.dao.mapper.FirmOfferPushHistMapper">
    <resultMap id="BaseResultMap" type="com.ailu.firmoffer.dao.bean.FirmOfferPushHist">

        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="exchange" jdbcType="VARCHAR" property="exchange"/>
        <result column="price" jdbcType="DECIMAL" property="price"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="symbol" jdbcType="VARCHAR" property="symbol"/>
        <result column="amount" jdbcType="DECIMAL" property="amount"/>
        <result column="time" jdbcType="TIMESTAMP" property="time"/>
        <result column="utime" jdbcType="TIMESTAMP" property="utime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, exchange, price, type, symbol, amount, time, utime
    </sql>
    <select id="selectByExample" parameterType="com.ailu.firmoffer.dao.bean.FirmOfferPushHistExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from firm_offer_push_hist
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from firm_offer_push_hist
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from firm_offer_push_hist
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.ailu.firmoffer.dao.bean.FirmOfferPushHistExample">
        delete from firm_offer_push_hist
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.ailu.firmoffer.dao.bean.FirmOfferPushHist">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into firm_offer_push_hist (exchange, price, type,
        symbol, amount, time,
        utime)
        values (#{exchange,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, #{type,jdbcType=VARCHAR},
        #{symbol,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, #{time,jdbcType=TIMESTAMP},
        #{utime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.ailu.firmoffer.dao.bean.FirmOfferPushHist">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into firm_offer_push_hist
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="exchange != null">
                exchange,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="symbol != null">
                symbol,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="time != null">
                time,
            </if>
            <if test="utime != null">
                utime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="exchange != null">
                #{exchange,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="symbol != null">
                #{symbol,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=DECIMAL},
            </if>
            <if test="time != null">
                #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="utime != null">
                #{utime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ailu.firmoffer.dao.bean.FirmOfferPushHistExample"
            resultType="java.lang.Long">
        select count(*) from firm_offer_push_hist
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update firm_offer_push_hist
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.exchange != null">
                exchange = #{record.exchange,jdbcType=VARCHAR},
            </if>
            <if test="record.price != null">
                price = #{record.price,jdbcType=DECIMAL},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=VARCHAR},
            </if>
            <if test="record.symbol != null">
                symbol = #{record.symbol,jdbcType=VARCHAR},
            </if>
            <if test="record.amount != null">
                amount = #{record.amount,jdbcType=DECIMAL},
            </if>
            <if test="record.time != null">
                time = #{record.time,jdbcType=TIMESTAMP},
            </if>
            <if test="record.utime != null">
                utime = #{record.utime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update firm_offer_push_hist
        set id = #{record.id,jdbcType=INTEGER},
        exchange = #{record.exchange,jdbcType=VARCHAR},
        price = #{record.price,jdbcType=DECIMAL},
        type = #{record.type,jdbcType=VARCHAR},
        symbol = #{record.symbol,jdbcType=VARCHAR},
        amount = #{record.amount,jdbcType=DECIMAL},
        time = #{record.time,jdbcType=TIMESTAMP},
        utime = #{record.utime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.ailu.firmoffer.dao.bean.FirmOfferPushHist">
        update firm_offer_push_hist
        <set>
            <if test="exchange != null">
                exchange = #{exchange,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="symbol != null">
                symbol = #{symbol,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=DECIMAL},
            </if>
            <if test="time != null">
                time = #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="utime != null">
                utime = #{utime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ailu.firmoffer.dao.bean.FirmOfferPushHist">
        update firm_offer_push_hist
        set exchange = #{exchange,jdbcType=VARCHAR},
        price = #{price,jdbcType=DECIMAL},
        type = #{type,jdbcType=VARCHAR},
        symbol = #{symbol,jdbcType=VARCHAR},
        amount = #{amount,jdbcType=DECIMAL},
        time = #{time,jdbcType=TIMESTAMP},
        utime = #{utime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>